# Name for this set of automated instructions
name: Lint JavaScript Code

# --- When should this run? ---
on:
  # Run whenever code is pushed to the 'main' branch
  push:
    branches: [ main ]
  # Also run if someone suggests changes via a Pull Request to 'main'
  pull_request:
    branches: [ main ]

# --- What jobs should be done? ---
jobs:
  # We'll define one job called 'lint'
  lint:
    # Use a standard virtual computer provided by GitHub (Ubuntu Linux)
    runs-on: ubuntu-latest

    # --- What steps are in the 'lint' job? ---
    steps:
      # Step 1: Download your code from GitHub onto the virtual computer
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the Node.js environment (JavaScript needs this)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a recent version of Node.js
          cache: 'npm' # Helps speed up future runs if you use npm

      # OPTIONAL Step: If your project uses Node packages listed in a 'package.json' file,
      # you might need to install them first. Uncomment the two lines below if needed.
      # - name: Install dependencies
      #   run: npm ci

      # Step 3: Run the JavaScript checker tool (ESLint)
      - name: Run ESLint
        # 'npx eslint .' tells it to run ESLint on all files in the project.
        # '--ext .js' tells it to only check files ending in .js
        # NOTE: This assumes ESLint is set up in your project (e.g., in package.json)
        #       and you might need an ESLint configuration file (like .eslintrc.js)
        #       to tell ESLint *which* rules to check. But this step tries to run it.
        run: npx eslint . --ext .js
